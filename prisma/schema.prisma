// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Sex {
  Male
  Female
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  name         String        @unique
  password     String
  team         Team          @relation(fields: [teamId], references: [id])
  teamId       Int
  sex          Sex
  tags         Tag[]
  beds         Bed[]
  transactions Transaction[]
  ads          Ad[]
  admin        Boolean       @default(false)
}

model Team {
  id           Int           @id @default(autoincrement())
  name         String
  users        User[]
  money        Int
  transactions Transaction[]
}

model Transaction {
  id          Int      @id @default(autoincrement())
  amount      Int
  team        Team     @relation(fields: [teamId], references: [id])
  teamId      Int
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  item        Item?    @relation(fields: [itemId], references: [id])
  itemId      Int?
  description String?
  createdAt   DateTime @default(now())
}

model Item {
  id           Int           @id @default(autoincrement())
  name         String
  cost         Int
  description  String
  image        String?
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  tags         Tag[]
  beds         Bed[]
  bedId        Int?
  amount       Int           @default(1)
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  items Item[]
  users User[]
  ads   Ad[]
}

model Bed {
  id       Int    @id @default(autoincrement())
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   Int
  room     Room   @relation(fields: [roomId], references: [id])
  roomId   Int
  user     User?  @relation(fields: [userId], references: [id])
  userId   Int?
  location String
}

model Room {
  id        Int    @id @default(autoincrement())
  name      String
  beds      Bed[]
  bed_count Int
}

enum AdType {
  IMAGE
  VIDEO
}

model Ad {
  id            Int    @id @default(autoincrement())
  type          AdType
  name          String
  content       String
  tags          Tag[]
  length        Int
  viewRemaining Int
  views         Int
  createdBy     User   @relation(fields: [createdById], references: [id])
  createdById   Int
}
