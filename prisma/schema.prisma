// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  team  Team   @relation(fields: [teamId], references: [id])
  teamId Int
  tags  Tag[]
  beds  Bed[]
}

model Team {
  id    Int     @id @default(autoincrement())
  name  String
  users User[]
  money Int
  transactions Transaction[]
  items Item[]
}

model Transaction {
  id        Int     @id @default(autoincrement())
  amount    Int
  team      Team    @relation(fields: [teamId], references: [id])
  teamId    Int
  createdAt DateTime @default(now())
}

model Item {
  id        Int     @id @default(autoincrement())
  name      String
  cost      Int
  description String
  team     Team?    @relation(fields: [teamId], references: [id])
  teamId    Int?
  createdAt DateTime @default(now())
  tags      Tag[]
  beds      Bed[]
  bedId     Int?
}

model Tag {
  id        Int     @id @default(autoincrement())
  name      String
  items     Item[]
  users     User[]
  ads       Ad[]
}

model Bed {
  id        Int     @id @default(autoincrement())
  item      Item    @relation(fields: [itemId], references: [id])
  itemId    Int
  room      Room    @relation(fields: [roomId], references: [id])
  roomId    Int
  user      User?   @relation(fields: [userId], references: [id])
  userId    Int?
  location  String
}

model Room {
  id        Int     @id @default(autoincrement())
  name      String
  beds      Bed[]
  bed_count Int
}

model Ad {
  id        Int     @id @default(autoincrement())
  type     String
  content  String
  tags     Tag[]
  length   Int
}

