@import 'tailwindcss';

@theme {
  --color-*: initial;

  --color-transparent: transparent;
  --color-current: currentColor;

  --color-black: #000;
  --color-white: #fff;

  --color-gray: #cbd5e0;
  /* tailwind v1 gray-400 */
  --color-gray-100: #f7fafc;
  --color-gray-200: #edf2f7;
  --color-gray-300: #e2e8f0;
  --color-gray-400: #cbd5e0;
  --color-gray-500: #a0aec0;
  --color-gray-600: #718096;
  --color-gray-700: #4a5568;
  --color-gray-800: #2d3748;
  --color-gray-900: #1a202c;

  --color-red: #e53e3e;
  /* tailwind v1 red-600 */
  --color-red-100: #fff5f5;
  --color-red-200: #fed7d7;
  --color-red-300: #feb2b2;
  --color-red-400: #fc8181;
  --color-red-500: #f56565;
  --color-red-600: #e53e3e;
  --color-red-700: #c53030;
  --color-red-800: #9b2c2c;
  --color-red-900: #742a2a;

  --color-orange: #ed8936;
  /* tailwind v1 orange-500 */
  --color-orange-100: #fffaf0;
  --color-orange-200: #feebc8;
  --color-orange-300: #fbd38d;
  --color-orange-400: #f6ad55;
  --color-orange-500: #ed8936;
  --color-orange-600: #dd6b20;
  --color-orange-700: #c05621;
  --color-orange-800: #9c4221;
  --color-orange-900: #7b341e;

  --color-yellow: #f6bf26;
  /* Gcal banana */
  --color-yellow-100: #fffff0;
  --color-yellow-200: #fefcbf;
  --color-yellow-300: #faf089;
  --color-yellow-400: #f6e05e;
  --color-yellow-500: #ecc94b;
  --color-yellow-600: #d69e2e;
  --color-yellow-700: #b7791f;
  --color-yellow-800: #975a16;
  --color-yellow-900: #744210;

  --color-green: #7cb342;
  /* Gcal pistacio */
  --color-green-100: #f0fff4;
  --color-green-200: #c6f6d5;
  --color-green-300: #9ae6b4;
  --color-green-400: #68d391;
  --color-green-500: #48bb78;
  --color-green-600: #38a169;
  --color-green-700: #2f855a;
  --color-green-800: #276749;
  --color-green-900: #22543d;

  --color-teal-100: #e6fffa;
  --color-teal-200: #b2f5ea;
  --color-teal-300: #81e6d9;
  --color-teal-400: #4fd1c5;
  --color-teal-500: #38b2ac;
  --color-teal-600: #319795;
  --color-teal-700: #2c7a7b;
  --color-teal-800: #285e61;
  --color-teal-900: #234e52;

  --color-blue: #4299e1;
  /* tailwind v1 blue-500 */
  --color-blue-100: #ebf8ff;
  --color-blue-200: #bee3f8;
  --color-blue-300: #90cdf4;
  --color-blue-400: #63b3ed;
  --color-blue-500: #4299e1;
  --color-blue-600: #3182ce;
  --color-blue-700: #2b6cb0;
  --color-blue-800: #2c5282;
  --color-blue-900: #2a4365;

  --color-indigo-100: #ebf4ff;
  --color-indigo-200: #c3dafe;
  --color-indigo-300: #a3bffa;
  --color-indigo-400: #7f9cf5;
  --color-indigo-500: #667eea;
  --color-indigo-600: #5a67d8;
  --color-indigo-700: #4c51bf;
  --color-indigo-800: #434190;
  --color-indigo-900: #3c366b;

  --color-purple: #8e24aa;
  /* Gcal grape */
  --color-purple-100: #faf5ff;
  --color-purple-200: #e9d8fd;
  --color-purple-300: #d6bcfa;
  --color-purple-400: #b794f4;
  --color-purple-500: #9f7aea;
  --color-purple-600: #805ad5;
  --color-purple-700: #6b46c1;
  --color-purple-800: #553c9a;
  --color-purple-900: #44337a;

  --color-pink-100: #fff5f7;
  --color-pink-200: #fed7e2;
  --color-pink-300: #fbb6ce;
  --color-pink-400: #f687b3;
  --color-pink-500: #ed64a6;
  --color-pink-600: #d53f8c;
  --color-pink-700: #b83280;
  --color-pink-800: #97266d;
  --color-pink-900: #702459;

  --border-width-slider: 0.375rem;

  --spacing-18: 4.5rem;
  --spacing-87: 21.75rem;
  --spacing-90: 23rem;

  --cursor-grab: grab;
  --cursor-grabbing: grabbing;

  --screens-2xl: 1536px;

  --tw-prose-body: var(--color-gray-200);
  --tw-prose-headings: #ffffff;
  --tw-prose-lead: var(--color-gray-300);
  --tw-prose-links: #ffffff;
  --tw-prose-bold: #ffffff;
  --tw-prose-counters: var(--color-gray-400);
  --tw-prose-bullets: var(--color-gray-600);
  --tw-prose-hr: var(--color-gray-700);
  --tw-prose-quotes: var(--color-gray-100);
  --tw-prose-quote-borders: var(--color-gray-700);
  --tw-prose-captions: var(--color-gray-400);
  --tw-prose-code: #ffffff;
  --tw-prose-pre-code: var(--color-gray-300);
  --tw-prose-pre-bg: var(--color-gray-700);
  --tw-prose-th-borders: var(--color-gray-600);
  --tw-prose-td-borders: var(--color-gray-700);
}

@import 'styles.css';

.btn {
  @apply bg-blue-500 text-white font-bold py-2 px-4 rounded focus:outline-none hover:bg-blue-700;
}

input[type='text'],
input[type='password'],
input[type='email'],
input[type='number'],
input[type='file'],
select {
  @apply border border-gray-400 p-2 rounded;
}

textarea {
  @apply border border-gray-400 p-2 rounded;
}

input[type='text']:focus,
input[type='text']:hover,
input[type='text']:active,
input[type='password']:focus,
input[type='password']:hover,
input[type='password']:active,
input[type='email']:focus,
input[type='email']:hover,
input[type='email']:active,
input[type='number']:focus,
input[type='number']:hover,
input[type='number']:active,
select:focus,
select:hover,
select:active {
  @apply border-blue-500;
}

h1 {
  @apply text-4xl font-bold text-center mt-2 mb-4;
}

.prose {
  color: #fff;
  max-width: 65ch;
}
.prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose
  :where([class~='lead']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}
.prose
  :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}
.prose
  :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}
.prose
  :where(blockquote strong):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}
.prose
  :where(thead th strong):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}
.prose :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose
  :where(ol[type='A']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-alpha;
}
.prose
  :where(ol[type='a']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-alpha;
}
.prose
  :where(ol[type='A' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-alpha;
}
.prose
  :where(ol[type='a' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-alpha;
}
.prose
  :where(ol[type='I']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-roman;
}
.prose
  :where(ol[type='i']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-roman;
}
.prose
  :where(ol[type='I' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: upper-roman;
}
.prose
  :where(ol[type='i' s]):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: lower-roman;
}
.prose
  :where(ol[type='1']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  list-style-type: decimal;
}
.prose :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.prose
  :where(ol > li):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}
.prose
  :where(ul > li):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::marker {
  color: var(--tw-prose-bullets);
}
.prose :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}
.prose :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose
  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: '\201C' '\201D' '\2018' '\2019';
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}
.prose
  :where(blockquote p:first-of-type):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: open-quote;
}
.prose
  :where(blockquote p:last-of-type):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose
  :where(h1 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 900;
  color: inherit;
}
.prose :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose
  :where(h2 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 800;
  color: inherit;
}
.prose :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose
  :where(h3 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose
  :where(h4 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 700;
  color: inherit;
}
.prose :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose
  :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow:
    0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
    0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-right: 0.375em;
  padding-bottom: 0.1875em;
  padding-left: 0.375em;
}
.prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}
.prose
  :where(code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: '`';
}
.prose
  :where(code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: '`';
}
.prose
  :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}
.prose
  :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}
.prose
  :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.875em;
}
.prose
  :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
  font-size: 0.9em;
}
.prose
  :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: inherit;
}
.prose
  :where(blockquote code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}
.prose
  :where(thead th code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  color: inherit;
}
.prose :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose
  :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose
  :where(pre code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::before {
  content: none;
}
.prose
  :where(pre code):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  )::after {
  content: none;
}
.prose :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}
.prose
  :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose
  :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}
.prose
  :where(tbody tr:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  border-bottom-width: 0;
}
.prose
  :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  vertical-align: baseline;
}
.prose :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}
.prose
  :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  vertical-align: top;
}
.prose
  :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose
  :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 75%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.prose
  :where(picture > img):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose
  :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-left: 0.375em;
}
.prose
  :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-left: 0.375em;
}
.prose
  :where(.prose > ul > li p):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose
  :where(.prose > ul > li > *:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.25em;
}
.prose
  :where(.prose > ul > li > *:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.25em;
}
.prose
  :where(.prose > ol > li > *:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.25em;
}
.prose
  :where(.prose > ol > li > *:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.25em;
}
.prose
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.5em;
  padding-left: 1.625em;
}
.prose
  :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose
  :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose
  :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose
  :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose
  :where(thead th:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-left: 0;
}
.prose
  :where(thead th:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-right: 0;
}
.prose
  :where(tbody td, tfoot td):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-left: 0;
}
.prose
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-right: 0;
}
.prose
  :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose
  :where(.prose > :first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
}
.prose
  :where(.prose > :last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 0;
}
.prose-lg {
  font-size: 1.125rem;
  line-height: 1.7777778;
}
.prose-lg :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}
.prose-lg
  :where([class~='lead']):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  font-size: 1.2222222em;
  line-height: 1.4545455;
  margin-top: 1.0909091em;
  margin-bottom: 1.0909091em;
}
.prose-lg
  :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  padding-left: 1em;
}
.prose-lg :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 2.6666667em;
  margin-top: 0;
  margin-bottom: 0.8333333em;
  line-height: 1;
}
.prose-lg :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 1.6666667em;
  margin-top: 1.8666667em;
  margin-bottom: 1.0666667em;
  line-height: 1.3333333;
}
.prose-lg :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 1.3333333em;
  margin-top: 1.6666667em;
  margin-bottom: 0.6666667em;
  line-height: 1.5;
}
.prose-lg :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}
.prose-lg
  :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg
  :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg
  :where(picture > img):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose-lg
  :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg
  :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
  border-radius: 0.3125rem;
  padding-top: 0.2222222em;
  padding-right: 0.4444444em;
  padding-bottom: 0.2222222em;
  padding-left: 0.4444444em;
}
.prose-lg
  :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
}
.prose-lg
  :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8666667em;
}
.prose-lg
  :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.875em;
}
.prose-lg
  :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
  line-height: 1.75;
  margin-top: 2em;
  margin-bottom: 2em;
  border-radius: 0.375rem;
  padding-top: 1em;
  padding-right: 1.5em;
  padding-bottom: 1em;
  padding-left: 1.5em;
}
.prose-lg :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}
.prose-lg :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.5555556em;
}
.prose-lg :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.6666667em;
  margin-bottom: 0.6666667em;
}
.prose-lg
  :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-left: 0.4444444em;
}
.prose-lg
  :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-left: 0.4444444em;
}
.prose-lg
  :where(.prose-lg > ul > li p):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.prose-lg
  :where(.prose-lg > ul > li > *:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.3333333em;
}
.prose-lg
  :where(.prose-lg > ul > li > *:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.3333333em;
}
.prose-lg
  :where(.prose-lg > ol > li > *:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 1.3333333em;
}
.prose-lg
  :where(.prose-lg > ol > li > *:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 1.3333333em;
}
.prose-lg
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.prose-lg :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
}
.prose-lg :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.3333333em;
}
.prose-lg :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0.6666667em;
  padding-left: 1.5555556em;
}
.prose-lg :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 3.1111111em;
  margin-bottom: 3.1111111em;
}
.prose-lg
  :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose-lg
  :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose-lg
  :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose-lg
  :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
}
.prose-lg
  :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
}
.prose-lg
  :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}
.prose-lg
  :where(thead th:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-left: 0;
}
.prose-lg
  :where(thead th:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-right: 0;
}
.prose-lg
  :where(tbody td, tfoot td):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-top: 0.75em;
  padding-right: 0.75em;
  padding-bottom: 0.75em;
  padding-left: 0.75em;
}
.prose-lg
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-left: 0;
}
.prose-lg
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  padding-right: 0;
}
.prose-lg
  :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 1.7777778em;
  margin-bottom: 1.7777778em;
}
.prose-lg
  :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose-lg
  :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  font-size: 0.8888889em;
  line-height: 1.5;
  margin-top: 1em;
}
.prose-lg
  :where(.prose-lg > :first-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-top: 0;
}
.prose-lg
  :where(.prose-lg > :last-child):not(
    :where([class~='not-prose'], [class~='not-prose'] *)
  ) {
  margin-bottom: 0;
}
.prose-invert {
  --tw-prose-body: var(--tw-prose-invert-body);
  --tw-prose-headings: var(--tw-prose-invert-headings);
  --tw-prose-lead: var(--tw-prose-invert-lead);
  --tw-prose-links: var(--tw-prose-invert-links);
  --tw-prose-bold: var(--tw-prose-invert-bold);
  --tw-prose-counters: var(--tw-prose-invert-counters);
  --tw-prose-bullets: var(--tw-prose-invert-bullets);
  --tw-prose-hr: var(--tw-prose-invert-hr);
  --tw-prose-quotes: var(--tw-prose-invert-quotes);
  --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
  --tw-prose-captions: var(--tw-prose-invert-captions);
  --tw-prose-kbd: var(--tw-prose-invert-kbd);
  --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
  --tw-prose-code: var(--tw-prose-invert-code);
  --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
  --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
  --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
  --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
}
@media (min-width: 1024px) {
  .lg\:prose-lg {
    font-size: 1.125rem;
    line-height: 1.7777778;
  }
  .lg\:prose-lg
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg
    :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 1.2222222em;
    line-height: 1.4545455;
    margin-top: 1.0909091em;
    margin-bottom: 1.0909091em;
  }
  .lg\:prose-lg
    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.6666667em;
    margin-bottom: 1.6666667em;
    padding-left: 1em;
  }
  .lg\:prose-lg
    :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 2.6666667em;
    margin-top: 0;
    margin-bottom: 0.8333333em;
    line-height: 1;
  }
  .lg\:prose-lg
    :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 1.6666667em;
    margin-top: 1.8666667em;
    margin-bottom: 1.0666667em;
    line-height: 1.3333333;
  }
  .lg\:prose-lg
    :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 1.3333333em;
    margin-top: 1.6666667em;
    margin-bottom: 0.6666667em;
    line-height: 1.5;
  }
  .lg\:prose-lg
    :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 0.4444444em;
    line-height: 1.5555556;
  }
  .lg\:prose-lg
    :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg
    :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg
    :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .lg\:prose-lg
    :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg
    :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    border-radius: 0.3125rem;
    padding-top: 0.2222222em;
    padding-right: 0.4444444em;
    padding-bottom: 0.2222222em;
    padding-left: 0.4444444em;
  }
  .lg\:prose-lg
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
  }
  .lg\:prose-lg
    :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8666667em;
  }
  .lg\:prose-lg
    :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.875em;
  }
  .lg\:prose-lg
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    line-height: 1.75;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.375rem;
    padding-top: 1em;
    padding-right: 1.5em;
    padding-bottom: 1em;
    padding-left: 1.5em;
  }
  .lg\:prose-lg
    :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .lg\:prose-lg
    :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
    padding-left: 1.5555556em;
  }
  .lg\:prose-lg
    :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.6666667em;
    margin-bottom: 0.6666667em;
  }
  .lg\:prose-lg
    :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-left: 0.4444444em;
  }
  .lg\:prose-lg
    :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-left: 0.4444444em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li > *:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > ul > li > *:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > ol > li > *:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.3333333em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > ol > li > *:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.8888889em;
    margin-bottom: 0.8888889em;
  }
  .lg\:prose-lg
    :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
    margin-bottom: 1.3333333em;
  }
  .lg\:prose-lg
    :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.3333333em;
  }
  .lg\:prose-lg
    :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.6666667em;
    padding-left: 1.5555556em;
  }
  .lg\:prose-lg
    :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 3.1111111em;
    margin-bottom: 3.1111111em;
  }
  .lg\:prose-lg
    :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .lg\:prose-lg
    :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .lg\:prose-lg
    :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .lg\:prose-lg
    :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .lg\:prose-lg
    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: 0.8888889em;
    line-height: 1.5;
  }
  .lg\:prose-lg
    :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .lg\:prose-lg
    :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-left: 0;
  }
  .lg\:prose-lg
    :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-right: 0;
  }
  .lg\:prose-lg
    :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.75em;
    padding-right: 0.75em;
    padding-bottom: 0.75em;
    padding-left: 0.75em;
  }
  .lg\:prose-lg
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-left: 0;
  }
  .lg\:prose-lg
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-right: 0;
  }
  .lg\:prose-lg
    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.7777778em;
    margin-bottom: 1.7777778em;
  }
  .lg\:prose-lg
    :where(figure > *):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .lg\:prose-lg
    :where(figcaption):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    font-size: 0.8888889em;
    line-height: 1.5;
    margin-top: 1em;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }
  .lg\:prose-lg
    :where(.lg\:prose-lg > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
}
